{
  "name": "plasttic",
  "version": "3.0.0",
  "description": "Plasttic Web Workflow: A methodology based Front-End development environment.",
  "author": "Goncalo Tojeiro <dev@tojeiro.me> (https://tojeiro.me)",
  "homepage": "https://github.com/tojeiro-me/Plasttic",
  "license": "MIT",
  "keywords": [
    "plasttic",
    "template",
    "boilerplate",
    "front-end",
    "atomic design",
    "dev server",
    "build tool"
  ],
  "type": "module",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tojeiro-me/Plasttic.git"
  },
  "bugs": {
    "url": "https://github.com/tojeiro-me/Plasttic/issues",
    "email": "global@plasttic.dev"
  },
  "engines": {
    "node": ">=18"
  },
  "files": [
    "package/*",
    "license.txt",
    "README.md",
    "CHANGELOG.md"
  ],
  "config": {},
  "scripts": {
    "dev": "npm run start:dev --dest=dev",
    "dev:ssl": "npm run start:dev:ssl --dest=dev",
    "build": "npm run start:build --dest=dist && chalk green bold '\nSUCCESS!' && chalk -t '{visible Production files on: {bold.magenta dist/}}'",
    "start": "npm install && husky install && npx playwright install && npm install typescript@5.1.5 && sudo npm install -g typescript@5.1.5",
    "copy:assets": "copyfiles -u 1 -a ./src/assets/*.* $npm_config_dest",
    "dev:copy:css": "postcss --config ./.dev.configs/ src/assets/css/styles.css --no-map -o dev/assets/css/styles.min.css && postcss --config ./.dev.configs/ src/assets/css/print.css --no-map -o dev/assets/css/print.min.css",
    "build:copy:css": "npm run lint:css && postcss src/assets/css/styles.css --no-map -o dist/assets/css/styles.min.css && postcss src/assets/css/print.css --no-map -o dist/assets/css/print.min.css",
    "copy:dirs": "cpx --include-empty-dirs \"./src/!(assets|private)/**/\" $npm_config_dest",
    "copy:files": "copyfiles -u 1 -a \"./src/*\" \"./src/**/*\" -e \"./src/assets/*\" -e \"./src/assets/**/*\" -e \"./src/private/*\" -e \"./src/private/**/*\" $npm_config_dest",
    "copy:fonts": "copyfiles -u 1 ./src/assets/fonts/* $npm_config_dest",
    "dev:copy:html": "copyfiles -u 1 ./src/*.html ./src/**/*.html $npm_config_dest && npm run mini:html",
    "build:copy:html": "npm run lint:html && copyfiles -u 1 ./src/*.html ./src/**/*.html $npm_config_dest && npm run mini:html",
    "copy:img": "copyfiles -u 1 ./src/assets/img/* ./src/assets/img/**/* ./src/assets/img/**/**/* $npm_config_dest",
    "dev:copy:js": "tsc && copyfiles -u 1 ./src/assets/js/vendor/* $npm_config_dest && copyfiles -u 1 ./src/assets/js/modules/*.js ./.plasttic/js/src && copyfiles -u 1 ./src/assets/js/*.js ./.plasttic/js/src && copyfiles -u 3 ./.plasttic/js/src/assets/js/modules/*.js $npm_config_dest && uglifyjs './.plasttic/js/src/assets/js/*.js' --config-file '.dev.configs/uglifyjs-dev.config.json' -o $npm_config_dest'/assets/js/scripts.min.js' && prettier --config ./.vscode/.prettierrc --write $npm_config_dest'/assets/js/modules/*.js' && del-cli ./.plasttic/js/*",
    "build:copy:js": "tsc && npm run lint:js && copyfiles -u 1 ./src/assets/js/vendor/* $npm_config_dest && copyfiles -u 1 ./src/assets/js/modules/*.js ./.plasttic/js/src && copyfiles -u 1 ./src/assets/js/*.js ./.plasttic/js/src && copyfiles -u 3 ./.plasttic/js/src/assets/js/modules/*.js $npm_config_dest && uglifyjs './.plasttic/js/src/assets/js/*.js' -o $npm_config_dest'/assets/js/scripts.min.js' --comments && minify-all-js $npm_config_dest/assets/js/modules/ && del-cli ./.plasttic/js/*",
    "copy:private": "copyfiles -u 1 -a \"./src/private/**/*\" $npm_config_dest",
    "del:assets": "del-cli ./$npm_config_dest/assets/*.*  && npm run copy:assets",
    "del:css": "del-cli ./$npm_config_dest/assets/css/*  && npm run dev:copy:css",
    "del:dest": "del-cli ./$npm_config_dest/* ./$npm_config_dest/**/* ./$npm_config_dest/.??**",
    "del:dirs": "del-cli ./$npm_config_dest/* ./$npm_config_dest/**/* !./$npm_config_dest/*.* !./$npm_config_dest/**/*.* !./$npm_config_dest/assets/** !./$npm_config_dest/private/** && npm run copy:dirs && npm run copy:files",
    "del:files": "del-cli ./$npm_config_dest/.??** ./$npm_config_dest/**/.??** ./$npm_config_dest/*.* ./$npm_config_dest/**/*.* !./$npm_config_dest/*.html !./$npm_config_dest/**/*.html !./$npm_config_dest/assets/ !./$npm_config_dest/assets/* !./$npm_config_dest/assets/**/* !./$npm_config_dest/private/ !./$npm_config_dest/private/* !./$npm_config_dest/private/**/* !./$npm_config_dest/private/.??** !./$npm_config_dest/private/**/.??** && npm run copy:files",
    "del:fonts": "del-cli ./$npm_config_dest/assets/fonts/* && npm run copy:fonts",
    "del:html": "del-cli ./$npm_config_dest/*.html ./$npm_config_dest/**/*.html && npm run dev:copy:html",
    "del:img": "del-cli ./$npm_config_dest/assets/img/* && ./$npm_config_dest/assets/img/**/* && ./$npm_config_dest/assets/img/**/**/* && npm run copy:img",
    "del:js": "del-cli ./$npm_config_dest/assets/js/* && del-cli ./.plasttic/js/* && npm run dev:copy:js",
    "del:private": "del-cli ./$npm_config_dest/private/.??** ./$npm_config_dest/private/**/.??** ./$npm_config_dest/private/* ./$npm_config_dest/private/**/* && npm run copy:private",
    "lint:all": "concurrently npm:lint:css npm:lint:html npm:lint:js",
    "lint:commit": "npx lint-staged --allow-empty",
    "lint:css": "npx stylelint src/assets/css/*.css --fix --quiet && prettier --config ./.vscode/.prettierrc --write src/assets/css/*.css --log-level silent",
    "lint:html": "prettier --config ./.vscode/.prettierrc --write src/*.html src/**/*.html --log-level silent",
    "lint:js": "npx eslint --ext .js,.ts ./src/assets/js/ ./src/assets/js/modules/ ./tests/jest/**/ ./tests/playwright/**/ --no-error-on-unmatched-pattern --fix",
    "mini:html": "rehype --setting allowDangerousCharacters:true $npm_config_dest/*.html $npm_config_dest/**/*.html  --use format --use remove-comments --use minify-css-style --use minify-javascript-script --output --silent",
    "package:commit": "del-cli ./package/* ./package/.??** !./package/.##gitignore## !./package/.github/** !./package/.husky/** !./package/.plasttic/** !./package/tests/** !./package/.unlighthouse/** && cpx --include-empty-dirs \"./src/!(boilerplate|sources)/**/*\" package/src && copyfiles -u 1 -a \"./src/*.*\" package/src && copyfiles -a -e ./pnpm-lock.yaml -e ./.gitignore -e ./CHANGELOG.md \"./*.*\" package && copyfiles -a \"./.vscode/**/*\" \"./.dev.configs/**/*\" -e ./.vscode/settings.json package && partytown copylib package/src/~partytown",
    "partytown:libs": "partytown copylib $npm_config_dest/~partytown",
    "start:dev": "npm run del:dest && concurrently npm:copy:* npm:dev:copy:html npm:dev:copy:css npm:dev:copy:js && npm run partytown:libs && concurrently npm:watch:* npm:sync",
    "start:dev:ssl": "npm run test:jest:dev && npm run test:play:dev && npm run del:dest && concurrently npm:copy:* npm:dev:copy:html npm:dev:copy:css npm:dev:copy:js && npm run partytown:libs && concurrently npm:watch:* npm:sync:ssl",
    "start:build": "npm run partytown:libs && npm run test:jest:ci && npm run test:play:ci && npm run del:dest && concurrently npm:copy:* npm:build:copy:html npm:build:copy:css npm:build:copy:js && npm run partytown:libs",
    "sync": "browser-sync start --port 8000 --watch --no-ui --server dev --files dev",
    "sync:ssl": "browser-sync start --config './browser-sync.cjs' --port 8000 --no-ui --server dev --files dev",
    "test:jest:ci": "jest --config=jest.ci.config.ts --passWithNoTests",
    "test:play:ci": "npx playwright test ./tests/playwright/build/* --pass-with-no-tests",
    "test:vitals:page": "lighthouse $npm_config_protocol://localhost:8000/$npm_config_page  --config-path ./lighthouse.config.cjs --cli-flags-path ./lighthouse.flags.json --output-path ./tests/lighthouse/reports/report.html && exit 0",
    "test:vitals:site": "npx unlighthouse --site $npm_config_url --config-file ./unlighthouse.config.ts",
    "watch:assets": "onchange -d 1000 'src/assets/*' -- npm run del:assets",
    "watch:css": "onchange -d 1000 'src/assets/css/*' -- npm run del:css",
    "watch:dirs": "onchange -d 1000 './src/*' './src/**/*' -e './src/*.*' -e './src/**/*.*' -e './src/assets/' -e './src/assets/**' -e './src/private/' -e './src/private/**' -- npm run del:dirs",
    "watch:files": "onchange -k -d 1000 './src/.??**' './src/**/.??**' './src/*.*' './src/**/*.*' -e 'src/*.html' -e 'src/**/*.html' -e 'src/private/*' -e 'src/private/**/*' -e 'src/private/.??**' -e 'src/private/**/.??**' -e 'src/assets/*' -e 'src/assets/**/*' -- npm run del:files",
    "watch:fonts": "onchange -d 1000 'src/assets/fonts/*' -- npm run del:fonts",
    "watch:html": "onchange -k -d 1000 'src/*.html' 'src/**/*.html' -- npm run del:html",
    "watch:img": "onchange -d 1000 'src/assets/img/*' 'src/assets/img/**/*' 'src/assets/img/**/**/*' -- npm run del:img",
    "watch:js": "onchange -d 1000 'src/assets/js/**/*.js' -- npm run del:js",
    "watch:private": "onchange -d 1000 'src/private/*' 'src/private/**/*' -- npm run del:private",
    "watch:ts": "onchange -d 1000 'src/assets/js/**/*.ts' -- npm run del:js"
  },
  "dependencies": {
    "@babel/core": "^7.22.9",
    "@babel/eslint-parser": "^7.22.9",
    "@babel/types": "^7.22.5",
    "@builder.io/partytown": "^0.8.0",
    "@csstools/postcss-global-data": "^2.0.1",
    "@csstools/postcss-progressive-custom-properties": "^3.0.0",
    "@fullhuman/postcss-purgecss": "^5.0.0",
    "@playwright/test": "^1.36.1",
    "@rushstack/eslint-patch": "^1.3.2",
    "@total-typescript/ts-reset": "^0.4.2",
    "@types/jest": "^29.5.3",
    "@types/node": "^20.4.5",
    "@typescript-eslint/eslint-plugin": "^6.2.1",
    "@typescript-eslint/parser": "^6.1.0",
    "autoprefixer": "^10.4.14",
    "babel-preset-airbnb": "^5.0.0",
    "browser-sync": "^2.29.3",
    "chalk-cli": "^5.0.1",
    "concurrently": "^8.2.0",
    "copyfiles": "^2.4.1",
    "cpx2": "^5.0.0",
    "cssnano": "^6.0.1",
    "cssnano-preset-default": "^6.0.1",
    "del-cli": "^5.0.0",
    "eslint": "^8.45.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-airbnb-typescript": "^17.1.0",
    "eslint-config-prettier": "^8.10.0",
    "eslint-import-resolver-node": "^0.3.7",
    "eslint-import-resolver-typescript": "^3.5.5",
    "eslint-plugin-html": "^7.1.0",
    "eslint-plugin-import": "^2.28.0",
    "eslint-plugin-jest": "^27.2.3",
    "eslint-plugin-n": "^16.0.1",
    "eslint-plugin-playwright": "^0.15.3",
    "eslint-plugin-prettier": "^5.0.0",
    "husky": "^8.0.3",
    "jest": "^29.6.1",
    "lint-staged": "^13.2.3",
    "minify-all-js": "^0.1.9",
    "onchange": "^7.1.0",
    "plasttic-reset": "^2.1.0",
    "postcss": "^8.4.26",
    "postcss-cli": "^10.1.0",
    "postcss-custom-media": "^10.0.0",
    "postcss-custom-properties": "^13.2.1",
    "postcss-discard-empty": "^6.0.0",
    "postcss-import": "^15.1.0",
    "postcss-import-ext-glob": "^2.1.1",
    "postcss-media-minmax": "^5.0.0",
    "postcss-mixins": "^9.0.4",
    "postcss-nesting": "^12.0.0",
    "postcss-preset-env": "^9.0.0",
    "postcss-simple-vars": "^7.0.1",
    "postcss-sorting": "^8.0.2",
    "prettier": "^3.0.1",
    "prettier-eslint": "^15.0.1",
    "rehype": "^12.0.1",
    "rehype-cli": "^11.0.1",
    "rehype-format": "^4.0.1",
    "rehype-minify-css-style": "^3.0.0",
    "rehype-minify-javascript-script": "^4.0.0",
    "rehype-minify-whitespace": "^5.0.1",
    "rehype-remove-comments": "^5.0.0",
    "socket.io": "^4.7.2",
    "stylelint": "^15.10.1",
    "stylelint-config-recommended": "^13.0.0",
    "stylelint-order": "^6.0.3",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "typescript": "^5.1.6",
    "uglify-js": "^3.17.4"
  },
  "devDependencies": {
    "jest-cli": "^29.6.1",
    "lighthouse": "^11.5.0",
    "unlighthouse": "^0.10.0",
    "zod": "^3.21.4"
  },
  "eslintConfig": {
    "extends": [
      "./.eslintrc.cjs"
    ]
  }
}
