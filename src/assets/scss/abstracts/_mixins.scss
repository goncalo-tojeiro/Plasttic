// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

@use '../base' as *;

/**
* Event wrapper
* @author Harry Roberts
* @param {Bool} $self [false] - Whether or not to include current selector
* @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
* see https://css-tricks.com/snippets/sass/simplifying-contexts-events/
*/
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}
// Uses:

// .my-element {
//   color: red;
//   @include on-event {
//       color: blue;
//   }
// }

// Result:

// .my-element {
//   color: red
// }
// .my-element:hover,
// .my-element:active,
// .my-element:focus {
//   color: blue
// }

//
// .my-element {
//   @include on-event($self: true) {
//       color: blue;
//   }
// }

// Result:

// .my-element,
// .my-element:hover,
// .my-element:active,
// .my-element:focus {
//   color: blue
// }

/**
* Make a context based selector a little more friendly
* @author Kitty Giraudel
* @param {String} $context
*/
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}
//Use:

// .my-element {
//   display: flex;
//   @include when-inside('.no-flexbox') {
//       display: table;
//   }
// }

// Result:

// .my-element {
//   display: flex;
// }

// .no-flexbox .my-element {
//   display: table;
// }
